<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Charles</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-04T07:42:31.289Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr.Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人hexo博客部署到腾讯云服务器centOS7.5</title>
    <link href="http://yoursite.com/2019/03/28/%E4%B8%AA%E4%BA%BAhexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8centOS7-5/"/>
    <id>http://yoursite.com/2019/03/28/个人hexo博客部署到腾讯云服务器centOS7-5/</id>
    <published>2019-03-28T05:43:22.000Z</published>
    <updated>2019-04-04T07:42:31.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文主要介绍如何在centOS系统上使用Hexo博客框架来搭建个人的博客，同时发布到自己的gitHub仓库用于博客的备份<br>如果你是小白，那么希望你能仔细阅读<strong>知识储备</strong>，了解大致内容，而不是直接上手进行配置<br>如果你对Linux系统有过接触，那么你只需简单浏览即可上手<br>如果你是Windows操作系统，可移步至其他参考教程，但我相信只要你能仔细阅读本教程，一样可以进行配置<br>本地环境：macOS<br>腾讯云服务器：centOS7.5</p><h1 id="知识储备"><a href="#知识储备" class="headerlink" title="知识储备"></a>知识储备</h1><blockquote><p>腾讯云</p></blockquote><blockquote><p><a href="https://baike.baidu.com/item/centos/498948?fr=aladdin" target="_blank" rel="noopener">CentOS</a>是一个基于Red Hat Linux提供的可自由使用源代码的企业级Linux发行版本。每个版本的CentOS都会获得十年的支持（通过安全更新方式）。新版本的CentOS大约每两年发行一次，而每个版本的CentOS会定期（大概每六个月）更新一次，以便支持新的硬件。这样，建立一个安全、低维护、稳定、高预测性、高重复性的 Linux 环境。CentOS是Community Enterprise Operating System的缩写。<a href="https://www.centos.org/" target="_blank" rel="noopener">官网链接</a></p></blockquote><blockquote><p><a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="noopener">homebrew</a>是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。<a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="noopener">官网链接</a></p></blockquote><blockquote><p><a href="http://nodejs.cn/" target="_blank" rel="noopener">Node.js</a>是一个基于Chrome JavaScript 运行时建立的一个平台。Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。简单的说 Node.js 就是运行在服务端的 JavaScript。<a href="http://nodejs.cn/" target="_blank" rel="noopener">官网链接</a></p></blockquote><blockquote><p><a href="https://baike.baidu.com/item/GIT/12647237?fr=aladdin" target="_blank" rel="noopener">git</a>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件。Git与常用的版本控制工具CVS,Subversion等不同，它采用了分布式版本库的方式，不必服务器端软件支持。<a href="https://git-scm.com/" target="_blank" rel="noopener">官网链接</a></p></blockquote><blockquote><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官网链接</a></p></blockquote><blockquote><p><a href="https://baike.baidu.com/item/nginx/3817705?fr=aladdin" target="_blank" rel="noopener">Nginx</a>一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。<a href="http://nginx.org/en/" target="_blank" rel="noopener">官网链接</a></p></blockquote><h1 id="SSH密钥配置"><a href="#SSH密钥配置" class="headerlink" title="SSH密钥配置"></a>SSH密钥配置</h1><h2 id="生成一个SSH密钥-已有密钥可以跳过这一步"><a href="#生成一个SSH密钥-已有密钥可以跳过这一步" class="headerlink" title="生成一个SSH密钥(已有密钥可以跳过这一步)"></a>生成一个SSH密钥(已有密钥可以跳过这一步)</h2><p><strong>本地生成</strong><br><code>ssh-keygen -t rsa -C &quot;yourMail&quot;</code><br><code>ssh-keygen -t rsa</code></p><ul><li>-t后面表示密钥类型，-C后参数用于注释，可以不填</li><li>此时在你的/Users/*user*/.ssh中会发现两个文件  “id_rsa”（私钥） “id_rsa.pub”（公钥）,</li><li>.ssh文件夹默认隐藏，command+shift+. 显示隐藏文件</li></ul><p><strong>腾讯云生成</strong></p><h2 id="配置腾讯云ssh密钥"><a href="#配置腾讯云ssh密钥" class="headerlink" title="配置腾讯云ssh密钥"></a>配置腾讯云ssh密钥</h2><p>依次<code>控制台-&gt;云服务器-&gt;SSH密钥-&gt;创建密钥-&gt;使用已有公钥</code></p><ul><li>填写密钥名称（仅仅用于自己方便记忆）</li><li>输入公钥，打开<code>id_rsa.pub</code>文件（右键选择TextEdit.app打开），复制其中全部内容</li><li>绑定到实例</li></ul><h2 id="测试配置是否成功"><a href="#测试配置是否成功" class="headerlink" title="测试配置是否成功"></a>测试配置是否成功</h2><ul><li>打开终端（Terminal）输入命令<code>ssh root@ServerIp</code></li><li><p>首次登陆会出现以下内容，输入yes即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;serverIp (serverIp)&apos; can&apos;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:***********************************.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure></li><li><p>此时在你的/Users/<em>user</em>/.ssh中会多出现一个knowns_hosts文件，记录已访问过的服务器，下次访问时将不再出现以上内容进行询问</p></li></ul><h1 id="服务器环境配置"><a href="#服务器环境配置" class="headerlink" title="服务器环境配置"></a>服务器环境配置</h1><h2 id="git的安装及配置"><a href="#git的安装及配置" class="headerlink" title="git的安装及配置"></a>git的安装及配置</h2><p><strong>安装git</strong></p><ul><li>输入命令<code>yum install git</code> 出现<code>Is this ok [y/d/N]:</code>输入<strong>y</strong>继续完成安装 </li><li>输入命令<code>git --version</code> 出现版本号表示安装成功</li></ul><p><strong>配置git</strong></p><ul><li><code>git config --global user.name &quot;gitHub用户名&quot;</code> 配置用户名 </li><li><code>git config --global user.email &quot;gitHub邮箱&quot;</code> 配置邮箱</li><li><code>git config --list</code> 查看配置信息 </li></ul><p>点击查看<a href="https://git-scm.com/book/zh/v1/起步-初次运行-Git-前的配置" target="_blank" rel="noopener">初次运行 Git 前的配置</a></p><hr><h2 id="Node-js的安装及配置"><a href="#Node-js的安装及配置" class="headerlink" title="Node.js的安装及配置"></a>Node.js的安装及配置</h2><p><strong>安装Node.js</strong></p><ul><li>输入命令<code>yum install nodejs</code> 出现<code>Is this ok [y/d/N]:</code>输入<strong>y</strong>继续完成安装 </li><li>输入命令<code>node -v</code> 出现版本号</li><li>输入命令<code>npm -v</code>出现版本号</li><li>安装Node.js时会自动安装npm</li></ul><h2 id="Nginx的安装及配置"><a href="#Nginx的安装及配置" class="headerlink" title="Nginx的安装及配置"></a>Nginx的安装及配置</h2><p><strong>安装Nginx</strong></p><ul><li><code>输入命令yum install nginx</code> 出现<code>Is this ok [y/d/N]:</code>输入<strong>y</strong>继续完成安装</li><li>输入命令<code>nginx -v</code>出现版本号</li><li>开启Nginx<code>systemctl start nginx</code></li><li>设置Nginx开机启动<code>systemctl enable nginx</code></li><li>在浏览器中输入ServerIp访问，出现Nginx的欢迎页面</li></ul><p><strong>配置Nginx</strong></p><ul><li><code>vim /etc/nginx/nginx.conf</code> 修改nginx的配置文件</li><li><p>定位到下方位置，输入<code>i</code>进行内容修改，完成后依次按下<code>ESC</code> <code>:wq</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span> default_server;</span><br><span class="line">        <span class="attribute">listen</span>       [::]:<span class="number">80</span> default_server;</span><br><span class="line">        <span class="attribute">server_name</span>  _;                        <span class="comment">#此处修改为你的域名，没有可不修改</span></span><br><span class="line">        <span class="comment"># root         /usr/share/nginx/html;  #注释掉原来的路径</span></span><br><span class="line">        <span class="attribute">root</span>         /home/git/blog;           <span class="comment">#此处修改为你的博客存放地址</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        <span class="attribute">include</span> /etc/nginx/default.d/<span class="regexp">*.conf</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">            <span class="attribute">location</span> = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">            <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>重启Nginx<code>systemctl restart nginx</code></p></li></ul><h2 id="新建git用户以及文件目录"><a href="#新建git用户以及文件目录" class="headerlink" title="新建git用户以及文件目录"></a>新建git用户以及文件目录</h2><p><strong>新建git用户</strong></p><ul><li>添加用户<code>adduser git</code></li><li>为用户添加密码<code>passwd git</code>  按照要求新建密码即可</li><li>将用户添加到管理组 <code>gpasswd -a git wheel</code></li></ul><p><strong>配置git用户密钥</strong></p><ul><li><code>su git</code>切换到git用户到达路径<code>[git@VM_73_216_centos root]$</code></li><li><code>cd</code>到达路径<code>[git@VM_73_216_centos ~]$</code></li><li><code>mkdir .ssh</code>创建<strong>.ssh</strong>文件</li></ul><p><strong>修改密钥文件权限</strong></p><ul><li>chmod 600 ~/.ssh/authorized_keys</li><li>chmod 700 ~/.ssh</li><li>(权限太多或者权限太少都会出现错误)</li></ul><p><strong>测试git用户</strong><br>打开一个新的终端输入命令<code>ssh git@serverIp</code><br>以git用户访问服务器</p><p><strong>创建并配置博客仓库</strong><br>进入到git用户的根目录下 <code>cd</code><br>git init –bare blog.git 创建裸仓库</p><p>vim post-receive</p><p>git –work-tree=/home/git/blog –git-dir=/home/git/blog.git checkout -f</p><hr><h1 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h1><h2 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h2><p><strong>安装编译环境</strong><br>安装XCode或者Command Line Tools for Xcode。Xcode可以从AppStore里下载安装，Command Line Tools for Xcode需要在终端中输入以下代码运行安装：xcode-select –install</p><p><strong>安装homebrew</strong><br>/usr/bin/ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</a></p><p><strong>安装git</strong><br>brew install git</p><p><strong>安装Node.js</strong><br>brew install node</p><p><strong>安装hexo</strong><br>sudo npm install -g hexo-cli</p><h1 id="hexo配置及简介"><a href="#hexo配置及简介" class="headerlink" title="hexo配置及简介"></a>hexo配置及简介</h1><h2 id="生成博客文件夹"><a href="#生成博客文件夹" class="headerlink" title="生成博客文件夹"></a>生成博客文件夹</h2><p>终端（Terminal）进入到存放博客的目录，运行<code>hexo init blog</code></p><p>修改hexo配置文件<br>推荐使用VS Code或者Sublime打开blog文件夹<br>打开_config.yml文件（注意不是themes中的_config.yml文件）</p><p>定位到最后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">- type: git</span><br><span class="line">  repo: git@github.com:你的gitHub账号名/hexo.git</span><br><span class="line">  branch: master</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@ServerIp:/home/git/blog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p><strong>清理缓存文件</strong><br>hexo clean</p><p><strong>生成博客静态页面</strong><br>hexo g<br>hexo generate</p><p><strong>运行本地博客服务</strong><br>hexo s<br>hexo server</p><p><code>INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></p><p>在浏览器中访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> .出现博客页面表示本地博客配置成功</p><p><strong>部署博客到服务器</strong><br>如果本地博客服务正开启，需要先在终端中按下 <code>Ctrl+C</code> 结束服务<br>hexo d<br>hexo deploy</p><p><strong>后续操作</strong><br>在浏览器中输入自己的服务器Ip（域名），即可看到自己的博客</p><p>在修改过本地配置文件、写文章后需要在当前博客目录下打开终端依次执行以下命令用以博客的发布<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h1 id="修改hexo主题"><a href="#修改hexo主题" class="headerlink" title="修改hexo主题"></a>修改hexo主题</h1><p>hexo 提供了大量的主题，可以去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a>挑选一款喜欢的主题进行配置</p><h1 id="配置过程中可能出现的问题"><a href="#配置过程中可能出现的问题" class="headerlink" title="配置过程中可能出现的问题"></a>配置过程中可能出现的问题</h1><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本文主要介绍如何在centOS系统上使用Hexo博客框架来搭建个人的博客，同时发布到自己的gitHub仓库用于博客的备份&lt;br&gt;如果你是小白
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MarkDown</title>
    <link href="http://yoursite.com/2019/03/25/MarkDown/"/>
    <id>http://yoursite.com/2019/03/25/MarkDown/</id>
    <published>2019-03-25T11:21:30.000Z</published>
    <updated>2019-04-01T02:27:21.019Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题 </span><br><span class="line">###### 六级标题 </span><br><span class="line"></span><br><span class="line">- 列表一</span><br><span class="line">- 列表二</span><br><span class="line">    a 列表1</span><br><span class="line">    b 列表2</span><br></pre></td></tr></table></figure><p><a href="http://www.baidu.com" target="_blank" rel="noopener">导航</a><br><code>[导航](http://www.baidu.com)</code><br>插入图片<br><code>![图片链接](图片URL)</code></p><p><em>斜体</em><br><code>*斜体*</code></p><p><strong>加粗</strong><br><code>**加粗**</code></p><p>单行代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`</span><br><span class="line">单行代码</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><p>代码块（多行代码）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/</span><br></pre></td></tr></table></figure><pre><code>代码块（多行代码）/<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">&gt; 引用</span><br><span class="line"></span><br><span class="line">`&gt;引用的文字`</span><br><span class="line"></span><br><span class="line">横线</span><br></pre></td></tr></table></figure></code></pre><hr><h2 id><a href="#" class="headerlink" title="`"></a><code>`</code></h2><table><thead><tr><th>language</th><th>key</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>1C</td><td>1c</td></tr><tr><td>ActionScript</td><td>actionscript</td></tr><tr><td>Apache</td><td>apache</td></tr><tr><td>AppleScript</td><td>applescript</td></tr></tbody></table><p>AsciiDoc    asciidoc<br>AspectJ    asciidoc<br>AutoHotkey    autohotkey<br>AVR Assembler    avrasm<br>Axapta    axapta<br>Bash    bash<br>BrainFuck    brainfuck<br>Cap’n Proto    capnproto<br>Clojure REPL    clojure<br>Clojure    clojure<br>CMake    cmake<br>CoffeeScript    coffeescript<br>C++    cpp<br>C#    cs<br>CSS    css<br>D    d<br>Dart    d<br>Delphi    delphi<br>Diff    diff<br>Django    django<br>DOS.bat    dos<br>Dust    dust<br>Elixir    elixir<br>ERB(Embedded Ruby)    erb<br>Erlang REPL    erlang-repl<br>Erlang    erlang<br>FIX    fix<br>F#    fsharp<br>G-code(ISO 6983)    gcode<br>Gherkin    gherkin<br>GLSL    glsl<br>Go    go<br>Gradle    gradle<br>Groovy    groovy<br>Haml    haml<br>Handlebars    handlebars<br>Haskell    haskell<br>Haxe    haxe<br>HTML    html<br>HTTP    http<br>Ini file    ini<br>Java    java<br>JavaScript    javascript<br>JSON    json<br>Lasso    lasso<br>Less    less<br>Lisp    lisp<br>LiveCode    livecodeserver<br>LiveScript    livescript<br>Lua    lua<br>Makefile    makefile<br>Markdown    markdown<br>Mathematica    mathematica<br>Matlab    matlab<br>MEL (Maya Embedded Language)    mel<br>Mercury    mercury<br>Mizar    mizar<br>Monkey    monkey<br>Nginx    nginx<br>Nimrod    nimrod<br>Nix    nix<br>NSIS    nsis<br>Objective C    objectivec<br>OCaml    ocaml<br>Oxygene    oxygene<br>Parser 3    parser3<br>Perl    perl<br>PHP    php<br>PowerShell    powershell<br>Processing    processing<br>Python’s profiler output    profile<br>Protocol Buffers    protobuf<br>Puppet    puppet<br>Python    python<br>Q    q<br>R    r<br>RenderMan RIB    rib<br>Roboconf    roboconf<br>RenderMan RSL    rsl<br>Ruby    ruby<br>Oracle Rules Language    ruleslanguage<br>Rust    rust<br>Scala    scala<br>Scheme    scheme<br>Scilab    scilab<br>SCSS    scss<br>Smali    smali<br>SmallTalk    smalltalk<br>SML    sml<br>SQL    sql<br>Stata    stata<br>STEP Part21(ISO 10303-21)    step21<br>Stylus    stylus<br>Swift    swift<br>Tcl    tcl<br>Tex    tex<br>text    text/plain<br>Thrift    thrift<br>Twig    twig<br>TypeScript    typescript<br>Vala    vala<br>VB.NET    vbnet<br>VBScript in HTML    vbscript-html<br>VBScript    vbscript<br>Verilog    verilog<br>VHDL    vhdl<br>Vim Script    vim<br>Intel x86 Assembly    x86asm<br>XL    xl<br>XML    xml<br>YAML    yml</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/hello-world/"/>
    <id>http://yoursite.com/2019/03/25/hello-world/</id>
    <published>2019-03-25T03:10:14.716Z</published>
    <updated>2019-03-25T10:12:35.213Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
